name: Check QA

on: push

jobs:
  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Run Unit Tests
        run: mvn test -Dspotless.check.skip

      - name: Run Linter
        run: mvn spotless:check

  blackduck:
    name: Run Black Duck Scan
    runs-on: ubuntu-latest
    needs:
      - tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Build with Maven
        id: build
        run: mvn clean install -DskipTests

      - name: Black Duck Full Scan
        uses: synopsys-sig/synopsys-action@v1.13.0
        env:
          DETECT_PROJECT_NAME: SKO-Connect_Services-Backend
          DETECT_ACCURACY_REQUIRED: "NONE"
        with:
          blackduck_url: ${{ secrets.BLACKDUCK_URL }}
          blackduck_token: ${{ secrets.BLACKDUCK_TOKEN }}
          blackduck_scan_full: true
          blackduck_args: "--detect.project.version.name=${{ github.ref_name }}"
          blackduck_scan_failure_severities: "BLOCKER,CRITICAL,MAJOR"
          blackduck_fixpr_enabled: false

  sonarqube:
    name: Run Sonar Scan
    runs-on: ubuntu-latest
    needs:
      - tests
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Run SonarQube
        run: |
          mvn verify sonar:sonar \
            -Dsonar.projectKey=SKO-Connect_Services-Backend \
            -Dsonar.token="${{ secrets.SONAR_TOKEN }}" \
            -Dsonar.host.url="${{ vars.SONAR_HOST_URL }}" \
            -Dspotless.check.skip
